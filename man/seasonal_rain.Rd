% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/seasonal_rain.R
\name{seasonal_rain}
\alias{seasonal_rain}
\title{Seasonal total rainfall}
\usage{
seasonal_rain(
  summary_data = NULL,
  start_date = NULL,
  end_date = NULL,
  s_start_month = 1,
  data,
  date_time,
  year = NULL,
  station = NULL,
  doy = NULL,
  rain = NULL,
  total_rain = TRUE,
  n_rain = TRUE,
  rain_day = 0.85,
  na_rm = FALSE,
  na_prop = NULL,
  na_n = NULL,
  na_consec = NULL,
  na_n_non = NULL,
  data_book = NULL
)
}
\arguments{
\item{summary_data}{Summary data frame containing the \code{start_date} and \code{end_date} variables. These variables are calculated from start of rains and end of season functions.}

\item{start_date}{\code{character(1)} The name of the start of rains column in \code{summary_data}.}

\item{end_date}{\code{character(1)} The name of the end of season column in \code{summary_data}.}

\item{s_start_month}{\code{integer(1)} Month (1–12) to treat as the start of the “year” when creating \code{year} or \code{doy}. Default \code{NULL} (assumes January).}

\item{data}{The daily data frame to calculate rainfall from.}

\item{date_time}{\code{\link[base]{Date}} The name of the date column in \code{data}.}

\item{year}{\code{character(1)} The name of the year column in \code{data}. If \code{NULL} it will be created using \code{lubridate::year(data[[date_time]])}.}

\item{station}{\code{character(1)} The name of the station column in \code{data}, if the data are for multiple station.}

\item{doy}{\code{character(1)} The name of the day of year column in \code{data} to apply the function to. If \code{NULL} it will be created using the \code{date_time} variable.}

\item{rain}{\code{character(1)} The name of the rainfall column in \code{data} to apply the function to.}

\item{total_rain}{\code{logical(1)} default \code{TRUE}. Display the total rainfall value for each year.}

\item{n_rain}{\code{logical(1)} default \code{TRUE}. Display the number of rainfall days.}

\item{rain_day}{\code{numerical(1)} If \code{n_rain = TRUE}, the minimum rainfall value in a day for that day to count as a rainfall day.}

\item{na_rm}{\code{logical(1)}. Should missing values (including \code{NaN}) be removed?}

\item{na_prop}{\code{integer(1)} Max proportion of missing values allowed}

\item{na_n}{\code{integer(1)} Max number of missing values allowed}

\item{na_consec}{\code{integer(1)} Max number of consecutive missing values allowed}

\item{na_n_non}{\code{integer(1)} Min number of non-missing values required}

\item{data_book}{The data book object where the data object is stored, default \code{NULL}.}
}
\value{
A data.frame with rainfall summaries for each year in the specified season (between start of the rains and end of season).
}
\description{
Total annual rainfall between start of the rains and end of the season.
}
\examples{
# Example: First calculate start and end rains
data_book <- DataBook$new()
daily_data <- rpicsa::daily_niger \%>\%
  dplyr::filter(year <= 1950) \%>\%
  dplyr::filter(year > 1945) \%>\%
  dplyr::mutate(year = as.numeric(year)) \%>\%
  dplyr::filter(station_name == "Agades")
data_book$import_data(list(daily_data = daily_data))

start_rains(data = "daily_data",
            date_time = "date",
            station = "station_name",
            year = "year",
            rain = "rain",
            start_day = 121,
            end_day = 300,
            output = "doy",
            data_book = data_book)

end_rains(data = "daily_data",
          date_time = "date",
          station = "station_name",
          year = "year",
          rain = "rain",
          start_day = 121,
          end_day = 300,
          output = "doy",
          data_book = data_book)

# then run the summaries for seasonal rainfall
seasonal_rain(summary_data = "daily_data_by_station_name_year",
              start_date = "start_rain",
              end_date = "end_rains",
              data = "daily_data",
              date_time = "date",
              year = "year",
              doy = "doy",
              station = "station_name",
              rain = "rain",
              data_book = data_book
)
daily_data_by_station_name_year <- data_book$get_data_frame("daily_data_by_station_name_year")
daily_data_by_station_name_year
}
