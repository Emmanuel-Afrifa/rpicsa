% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/seasonal_length.R
\name{seasonal_length}
\alias{seasonal_length}
\title{Length of the rainfall season}
\usage{
seasonal_length(
  summary_data,
  start_date,
  end_date,
  start_rain_status = NULL,
  end_rain_status = NULL,
  season_length_save_name = "length",
  occurrence_save_name = "occurrence",
  data_book = NULL
)
}
\arguments{
\item{summary_data}{\code{character(1)} Name of the summary data frame in \code{data_book}
that contains the season boundary columns (e.g., \code{start_rain}, \code{end_rains}).}

\item{start_date}{\code{character(1)} Column name in \code{summary_data} giving the start
of rains (typically a day-of-year integer).}

\item{end_date}{\code{character(1)} Column name in \code{summary_data} giving the end
of season (typically a day-of-year integer).}

\item{start_rain_status}{\code{character(1)} Optional column name in \code{summary_data}
giving a logical flag for whether a valid start of rains was found for that row.}

\item{end_rain_status}{\code{character(1)} Optional column name in \code{summary_data}
giving a logical flag for whether a valid end of season was found for that row.}

\item{season_length_save_name}{\code{character(1)} Name of the column to save the computed
season length into. Default \code{"length"}.}

\item{occurrence_save_name}{\code{character(1)} Name of the column to save the derived
occurrence status into (only used when status columns are supplied). Default \code{"occurrence"}.}

\item{data_book}{The \code{DataBook} (R6) object holding \code{summary_data}. If \code{NULL},
a new one is created internally (side effects then apply to that object).}
}
\value{
Invisibly returns \code{NULL}. Retrieve results with
\code{data_book$get_data_frame(summary_data)}.
}
\description{
Compute the number of days between the start of the rains and the end of the
season for each row in a season summary table. Optionally, also derive an
\code{occurrence} status from logical start/end status flags. Results are
written back into \code{summary_data} stored in \code{data_book}.
}
\details{
The function always computes the season length as
\code{end_date - start_date} and stores it in \code{season_length_save_name}.

If both \code{start_rain_status} and \code{end_rain_status} are provided, an
additional \code{occurrence} column is created via:

\itemize{
\item \code{NA} if either status is \code{NA}
\item \code{"TRUE"} if \code{start_rain_status == end_rain_status == TRUE}
\item \code{"FALSE"} if \code{start_rain_status == end_rain_status == FALSE}
\item \code{"NONE"} if \code{start_rain_status == FALSE} and \code{end_rain_status == TRUE}
\item \code{"MORE"} if \code{start_rain_status == TRUE} and \code{end_rain_status == FALSE}
}

The \code{occurrence} column is converted to a factor. This function modifies
\code{summary_data} inside \code{data_book} and returns invisibly.
}
\examples{
# Example: compute start/end (DOY + STATUS) then season length for Agades (1946â€“1950 subset)
data_book <- DataBook$new()
daily_data <- rpicsa::daily_niger |>
  dplyr::filter(year > 1945, year <= 1950, station_name == "Agades") |>
  dplyr::mutate(year = as.numeric(year))
data_book$import_data(list(daily_data = daily_data))

start_rains(
  data = "daily_data", date_time = "date", station = "station_name",
  year = "year", rain = "rain", start_day = 121, end_day = 300,
  output = c("doy", "status"), data_book = data_book
)

end_rains(
  data = "daily_data", date_time = "date", station = "station_name",
  year = "year", rain = "rain", start_day = 121, end_day = 300,
  output = c("doy", "status"), data_book = data_book
)

seasonal_length(
  summary_data        = "daily_data_by_station_name_year",
  start_date          = "start_rain",
  end_date            = "end_rains",
  start_rain_status   = "start_rain_status",
  end_rain_status     = "end_rains_status",
  data_book           = data_book
)

# Inspect results
data_book$get_data_frame("daily_data_by_station_name_year")
}
\seealso{
\code{\link{start_rains}}, \code{\link{end_rains}}, \code{\link{seasonal_rain}}
}
